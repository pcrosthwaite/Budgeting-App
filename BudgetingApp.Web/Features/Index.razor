@page "/"
@using BudgetingApp.Data
@using BudgetingApp.Data.Services
@using MudBlazor
@inject BudgetService BudgetService
@inject IMediator Mediator

@if(Model != null){
    <MudContainer>
        <MudTable Items="@Model.Expenses" Hover="true" Bordered="true" Striped="true">
            <HeaderContent>
                <MudTh>Expense</MudTh>
                <MudTh>Cost</MudTh>
                <MudTh>Fortnightly Cost</MudTh>
                <MudTh>Responsible Persons</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Expense">@context.Name</MudTd>
                <MudTd DataLabel="Cost">@context.Cost</MudTd>
                <MudTd DataLabel="Fortnightly Cost">@context.FortnightlyCost</MudTd>
                <MudTd DataLabel="Responsible Persons">
                    <ul>
                        @foreach (var personExpense in context.PersonExpenses)
                        {
                            <li>@personExpense.Person.Name</li>
                        }
                    </ul>
                </MudTd>
            </RowTemplate>
        </MudTable>
    </MudContainer>

    <MudContainer>
        <h3>Bills Account Transfers</h3>
        <MudTable Items="@Model.BillTransfers" Hover="true" Bordered="true" Striped="true">
            <HeaderContent>
                <MudTh>Person</MudTh>
                <MudTh>Amount</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Person">@context.Name</MudTd>
                <MudTd DataLabel="Amount">@context.FortnightlyCost</MudTd>
            </RowTemplate>
        </MudTable>
    </MudContainer>
}
@code {
    public IndexQuery Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model = await Mediator.Send(new IndexQuery());
    }
}