@page "/"
@using BudgetingApp.Data
@using BudgetingApp.Data.Services
@using MudBlazor
@using System.Globalization
@using ApexCharts
@inject BudgetService BudgetService
@inject IMediator Mediator
@inject IDialogService DialogService

@if(Model != null){
    <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">
        <MudGrid>
            <MudItem xs="12">
                <MudText Typo="Typo.h3">Budget Overview</MudText>
            </MudItem>
            <MudItem xs="6">
                <MudDataGrid Items="@Model.Expenses" Hover="true" Bordered="true" Striped="true">
                    <Columns>
                        @* <PropertyColumn Property="x => x.Name" Title="Expense" /> *@
                        <TemplateColumn Title="Expense">
                            <CellTemplate Context="context">
                                <MudLink OnClick="@(() => EditExpense(context.Item.ExpenseId))">@context.Item.Name</MudLink>
                            </CellTemplate>
                        </TemplateColumn>
                        <PropertyColumn Property="x => x.CategoryName" Title="Category" />
                        <PropertyColumn Property="x => x.Cost" Title="Cost" Format="C" />
                        <PropertyColumn Property="x => x.FortnightlyCost" Title="Fortnightly Cost" Format="C" />
                        @foreach (var person in Model.TotalPersons)
                        {
                            <TemplateColumn Title="@person.Name">
                                <CellTemplate Context="context">
                                    @{
                                        var pe = context.Item.PersonExpenses.FirstOrDefault(x => x.PersonId == person.PersonId);
                                        decimal? share = pe is null ? null : (context.Item.FortnightlyCost * (decimal)pe.Percentage); // / Helpers.GetWeeksInFortnight(context.Item.Frequency);
                                        var pc = pe is null ? "" : pe.Percentage.ToString("P2");
                                    }
                                    @if (share.HasValue)
                                    {
                                        <MudTooltip Text="@pc">
                                            @share.Value.ToString("C2", CultureInfo.GetCultureInfo("en-AU"))
                                        </MudTooltip>
                                    }
                                </CellTemplate>
                            </TemplateColumn>
                        }
                    </Columns>
                </MudDataGrid>
            </MudItem>
            <MudItem xs="6">
                @{
                    
                }
                <MudGrid>
                    <MudItem xs="12">
                        <h3>Bills Account Transfers</h3>
                        <MudTable Items="@Model.BillTransferOverview" Hover="true" Bordered="true" Striped="true">
                            <HeaderContent>
                                <MudTh>Person</MudTh>
                                <MudTh Align="Right">Total Fortnightly</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Person">@context.PersonName</MudTd>
                                <MudTd DataLabel="Total Fortnightly" Align="Right">
                                    @context.Share.ToString("C2", CultureInfo.GetCultureInfo("en-AU"))
                                </MudTd>
                            </RowTemplate>
                        </MudTable>
                    </MudItem>
                    <MudItem xs="12">
                        <h3>Subscriptions</h3>
                        <MudDataGrid Items="@Model.Subscriptions" Hover="true" Bordered="true" Striped="true">
                            <Columns>
                                <PropertyColumn Property="x => x.Name" Title="Expense" />
                                <PropertyColumn Property="x => x.Cost" Title="Cost" Format="C" />
                                <PropertyColumn Property="x => x.FortnightlyCost" Title="Fortnightly Cost" Format="C" />
                                @foreach (var person in Model.TotalPersons)
                                {
                                    <TemplateColumn Title="@person.Name">
                                        <CellTemplate Context="context">
                                            @{
                                                var pe = context.Item.PersonExpenses.FirstOrDefault(x => x.PersonId == person.PersonId);
                                                decimal? share = pe is null ? null : (context.Item.FortnightlyCost * (decimal)pe.Percentage); // / Helpers.GetWeeksInFortnight(context.Item.Frequency);
                                                var pc = pe is null ? "" : pe.Percentage.ToString("P2");
                                            }
                                            @if (share.HasValue)
                                            {
                                                <MudTooltip Text="@pc">
                                                    @share.Value.ToString("C2", CultureInfo.GetCultureInfo("en-AU"))
                                                </MudTooltip>
                                            }
                                        </CellTemplate>
                                    </TemplateColumn>
                                }
                            </Columns>
                        </MudDataGrid>
                    </MudItem>
                    <MudItem xs="12">
                        <h3>Fortnightly Overview</h3>
                        <ApexChart TItem="CategoryData"
                                   Options="Model.BillOverviewChartOptions"
                                   Width="500" Height="400">
                            <ApexPointSeries TItem="CategoryData"
                                             Items="Model.BillOverviewData"
                                             Name="By Category"
                                             SeriesType="SeriesType.Pie"
                                             XValue="x => x.CategoryName"
                                             YValue="x => x.Total" />
                        </ApexChart>
                    </MudItem>
                </MudGrid>
            </MudItem>
        </MudGrid>
    </MudContainer>
}

@code {
    public IndexQuery Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model = await Mediator.Send(new IndexQuery());
    }

    private async Task EditExpense(int expenseId)
    {
        var parameters = new DialogParameters { ["ExpenseId"] = expenseId };
        var dialog = await DialogService.ShowAsync<Expenses.Editor>("Edit Expense", parameters, new DialogOptions() { Position = DialogPosition.Center, MaxWidth = MaxWidth.Medium, FullWidth = true });
        var result = await dialog.Result;

        if (!result?.Canceled ?? true)
        {
            await OnInitializedAsync();
        }
    }
    }