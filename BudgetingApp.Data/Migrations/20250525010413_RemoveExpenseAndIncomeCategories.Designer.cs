// <auto-generated />
using BudgetingApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BudgetingApp.Data.Migrations
{
    [DbContext(typeof(BudgetingDbContext))]
    [Migration("20250525010413_RemoveExpenseAndIncomeCategories")]
    partial class RemoveExpenseAndIncomeCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("BudgetingApp.Data.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HexColourCode")
                        .HasMaxLength(7)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BudgetingApp.Data.Models.Expense", b =>
                {
                    b.Property<int>("ExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cost")
                        .HasColumnType("TEXT");

                    b.Property<int>("Frequency")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IncludeInBillsAccount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.HasKey("ExpenseId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("BudgetingApp.Data.Models.Income", b =>
                {
                    b.Property<int>("IncomeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Frequency")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PersonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IncomeId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Income");
                });

            modelBuilder.Entity("BudgetingApp.Data.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IncomeId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.HasKey("PersonId");

                    b.HasIndex("IsDeleted")
                        .HasFilter("IsDeleted = 0");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("BudgetingApp.Data.Models.PersonExpense", b =>
                {
                    b.Property<int>("PersonExpenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Percentage")
                        .HasColumnType("REAL");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonExpenseId");

                    b.HasIndex("ExpenseId");

                    b.HasIndex("PersonId", "ExpenseId");

                    b.ToTable("PersonExpenses");
                });

            modelBuilder.Entity("BudgetingApp.Data.Models.Expense", b =>
                {
                    b.HasOne("BudgetingApp.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BudgetingApp.Data.Models.Income", b =>
                {
                    b.HasOne("BudgetingApp.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BudgetingApp.Data.Models.Person", "Person")
                        .WithOne("Income")
                        .HasForeignKey("BudgetingApp.Data.Models.Income", "PersonId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Category");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("BudgetingApp.Data.Models.PersonExpense", b =>
                {
                    b.HasOne("BudgetingApp.Data.Models.Expense", "Expense")
                        .WithMany("PersonExpenses")
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BudgetingApp.Data.Models.Person", "Person")
                        .WithMany("PersonExpenses")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Expense");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("BudgetingApp.Data.Models.Expense", b =>
                {
                    b.Navigation("PersonExpenses");
                });

            modelBuilder.Entity("BudgetingApp.Data.Models.Person", b =>
                {
                    b.Navigation("Income");

                    b.Navigation("PersonExpenses");
                });
#pragma warning restore 612, 618
        }
    }
}
